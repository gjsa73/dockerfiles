#
# This Docker-compose is for deploying GC2 and Vidi in a test environment.
# It will expose GC2 on port 8080 and Vidi on 3000
# PostgreSQL password is set to 12345
#
# The run following command to deploy:
#
# $ docker-compose up
#
# There will be created named volumes for persistence.
#
# 'docker-compose down' will not remove data
# 'docker-compose down -v' will remove the volumes!!!
#

version: '3'

networks:
  internal:
    external: false

services:

  gc2core:
    image: mapcentia/gc2core
    privileged: true
    volumes:
      - gc2core_var_www_geocloud2:/var/www/geocloud2
      - gc2core_var_log:/var/log
      - gc2core_var_lib_php_sessions:/var/lib/php/sessions
    env_file:
      - gc2.env
    networks:
      - default
      - internal
    ports:
      - "8080:80"

  mapcache:
    image: mapcentia/mapcache
    volumes:
      - gc2core_var_www_geocloud2:/var/www/geocloud2
      - mapcache_etc_apache2_sites-enabled:/etc/apache2/sites-enabled
    networks:
      - internal

  postgis:
    image: mapcentia/postgis
    volumes:
      - postgis_var_www_geocloud2:/var/www/geocloud2
      - postgis_var_lib_postgresql:/var/lib/postgresql
      - postgis_var_log:/var/log
      - postgis_etc_postgresql:/etc/postgresql
      - postgis_etc_pgbouncer:/etc/pgbouncer
    env_file:
      - gc2.env
    networks:
      - internal
    #ports:
    #  - "5432:5432"

  vidi:
    image: mapcentia/vidi
    volumes:
      - vidi_root_vidi:/root/vidi
    env_file:
      - vidi.env
    network_mode: "host"

volumes:
    # gc2core
    gc2core_var_www_geocloud2:
    gc2core_var_log:
    gc2core_var_lib_php_sessions:

    # mapcache
    mapcache_etc_apache2_sites-enabled:

    # postgis
    postgis_var_log:
    postgis_var_www_geocloud2:
    postgis_etc_postgresql:
    postgis_var_lib_postgresql:
    postgis_etc_pgbouncer:

    # Vidi
    vidi_root_vidi:




